server:
  port: 8200
  servlet:
    session-timeout: 1800
    context-path: /auth

spring:
  # 数据库连接池配置
  datasource:
    initial-size: 10
    min-idle: 10
    max-active: 50
    # 数据库模式
    current-schema: basic

  # kafka
  kafka:
    consumer:
      group-id: LAN_LIFE_AUTH
      auto-offset-reset: earliest
    bootstrap-servers: ${kafka.consumer.servers}

# executer
executer:
  global:
    corePoolSize: 20
    maxPoolSize: 200
    queueCapacity: 2000
    keepAliveSeconds: 500

mybatis-plus:
  global-config:
    db-config:
      logic-delete-value: 0
      logic-not-delete-value: 1


security:
  oauth2:
    resource:
      filter-order: 3
    client:
      clientId: auth
      clientSecret: 123456
      accessTokenUri: http://${GATEWAY:localhost}/auth/oauth/token
      grant-type: client_credentials
      scope: server
  expired_time:
    access_token:
      bs: 1800
      third: 604800
    refresh_token:
      bs: 3600
      third: 1209600
management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: prometheus,health,info
  metrics:
    distribution:
      sla:
        http:
          server:
            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s
    tags:
      application: auth